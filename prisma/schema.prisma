// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id    String @id @default(uuid())
    username String @unique
    email String
    hashedPassword String

    profile Profile?
    sessions Session[]

    access UserAccess[]

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Profile {
    id    String @id @default(cuid())
    firstname String
    lastname String
    avatarURL String ?

    userId String @unique
    user User @relation(fields: [userId], references: [id])
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

enum AccessLevel {
    admin
    writer
    reader
}

model UserAccess {
    id    String @id @default(cuid())
    level AccessLevel

    userId String
    user User @relation(fields: [userId], references: [id])

    treeId String
    tree Tree @relation(fields: [treeId], references: [id])
}


enum TypeTree {
    public
    private
}

model Tree {
    id   String @id @default(cuid())
    name String
    type TypeTree
    member Member[]
    userAccess UserAccess[]
}

enum Sex {
    masculin
    feminin
}

model Member {
    id   String @id @default(cuid())
    firstname String ?
    lastname  String
    birthdate  DateTime ?
    placeOfBirth String ?
    sex Sex
    avatarURL String ?
    description String ?

    treeId String
    tree Tree @relation(fields: [treeId], references: [id])

    relation Relation ?
}


model Relation {
    fatherId String ?
    motherId String ?
    spouses String[]
    children String[]

    memberId String @unique
    member Member @relation(fields: [memberId], references: [id])
}
